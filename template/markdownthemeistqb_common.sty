\NeedsTeXFormat{LaTeX2e}
\ProvidesExplPackage
  {markdownthemeistqb_common}%
  {2025-01-20}%
  {1.0.2}%
  {LaTeX theme for the Markdown Package that contains common code for different types of ISTQB documents}

% Hybrid Markdown + LaTeX text
\markdownSetup
  {
    fencedCode,
    rawAttribute,
    renderers = {
      inputRawInline = {
        \protect  % Enable the use of raw inlines in headings.
          \texorpdfstring
            { \protect \markdownEscape { #1 } \unskip }
            { (raw~#2~code) }
      }
    },
  }

% Paragraphs and line breaks
\markdownSetup
  {
    renderers = {
      hardLineBreak = { \\ },
    }
  }

% Lists
\markdownSetup
  {
    hashEnumerators,
    tightLists = false,
  }

% Subscripts and superscripts
\markdownSetup
  {
    subscripts = true,
    superscripts = true,
  }

% Language
\cs_new:Nn
  \istqb_load_language:n
  {
    \markdownInput
      [ snippet = istqb / common / language ]
      { istqb_product_base / languages / #1.yml }
  }
\tl_new:N
  \l_istqb_language_position_tl
\tl_set:Nn
  \l_istqb_language_position_tl
  { istqb / language }
\seq_new:N
  \g_istqb_language_allow_unknown_keys_seq
\markdownSetupSnippet
  { language }
  {
    jekyllData,
    expectJekyllData,
    ensureJekyllData,
    renderers = {
      jekyllData(Sequence|Mapping)Begin = {
        \group_begin:
        \str_if_eq:nnF
          { #1 }
          { null }
          {
            \tl_put_right:Nn
              \l_istqb_language_position_tl
              { / #1 }
          }
      },
      jekyllData(Sequence|Mapping)End = {
        \group_end:
      },
      jekyllDataProgrammaticString = ,
      jekyllData(TypographicString|Boolean) = {
        \tl_set:Nx
          \l_tmpa_tl
          { { \l_istqb_language_position_tl / #1 } }
        \tl_put_right:Nn
          \l_tmpa_tl
          { = { #2 } }
        \seq_if_in:NVTF
          \g_istqb_language_allow_unknown_keys_seq
          \l_istqb_language_position_tl
          {
            \keys_set:nV
              { }
              \l_tmpa_tl
          }
          {
            \keys_set_known:nV
              { }
              \l_tmpa_tl
          }
      },
      jekyllDataEnd = { },
    },
  }
\RequirePackage
  { etoolbox }
\AtEndPreamble
  {
    % Load babel.
    \exp_args:NV
      \PassOptionsToPackage
      \g_istqb_babel_language_tl
      { babel }
    \RequirePackage
      [ shorthands = off ]
      { babel }
    % Override standard translations with our language definitions.
    \AtBeginDocument
      {
        \tl_if_empty:NF
          \g_istqb_translation_contents_name_tl
          {
            \tl_gset_eq:NN
              \contentsname
              \g_istqb_translation_contents_name_tl
          }
        \tl_if_empty:NF
          \g_istqb_translation_list_of_tables_name_tl
          {
            \tl_gset_eq:NN
              \listtablename
              \g_istqb_translation_list_of_tables_name_tl
          }
        \tl_if_empty:NF
          \g_istqb_translation_list_of_figures_name_tl
          {
            \tl_gset_eq:NN
              \listfigurename
              \g_istqb_translation_list_of_figures_name_tl
          }
        \tl_if_empty:NF
          \g_istqb_translation_table_name_tl
          {
            \tl_gset_eq:NN
              \tablename
              \g_istqb_translation_table_name_tl
          }
        \tl_if_empty:NF
          \g_istqb_translation_figure_name_tl
          {
            \tl_gset_eq:NN
              \figurename
              \g_istqb_translation_figure_name_tl
          }
      }
    % Enable/disable hyphenation.
    \bool_if:nF
      {
        \g_istqb_metadata_hyphenation_specified_bool
        && \g_istqb_metadata_hyphenation_bool
        || ! \g_istqb_metadata_hyphenation_specified_bool
        && \g_istqb_language_hyphenation_bool
      }
      {
        \tl_set:Nn
          \l_tmpa_tl
          {
            \babelprovide
              [ hyphenrules = nohyphenation ]
          }
        \exp_args:NNV
          \tl_use:N
            \l_tmpa_tl
          \g_istqb_babel_language_tl
      }
  }
\tl_new:N
  \g_istqb_babel_language_tl
\bool_new:N
  \g_istqb_language_hyphenation_bool
\tl_new:N
  \g_istqb_translation_contents_name_tl
\keys_define:nn
  { istqb / language }
  {
    babel-language .tl_gset:N = \g_istqb_babel_language_tl,
    hyphenation .bool_gset:N = \g_istqb_language_hyphenation_bool,
    appendix .tl_gset:N = \istqbappendixname,
    references .tl_gset:N = \istqbrefname,
    further-reading .tl_gset:N = \istqbfurtherreadingname,
    istqb .tl_gset:N = \istqborgname,
    contents .tl_gset:N = \g_istqb_translation_contents_name_tl,
  }
\keys_define:nn
  { istqb / language / bibliography-subsections }
  {
    standards .tl_gset:N = \istqbstandardsname,
    documents .tl_gset:N = \istqbdocumentsname,
    books .tl_gset:N = \istqbbooksname,
    articles .tl_gset:N = \istqbarticlesname,
    web-pages / 1 .tl_gset:N = \istqbwebpagesname,
    web-pages / 2 .tl_gset:N = \istqbwebpagespostnote,
    glossary-references / 1 .tl_gset:N =
      \istqbglossaryreferencesname,
    glossary-references / 2 .tl_gset:N =
      \istqbglossaryreferencesprenote,
  }
\tl_new:N
  \g_istqb_translation_list_of_tables_name_tl
\tl_new:N
  \g_istqb_translation_list_of_figures_name_tl
\keys_define:nn
  { istqb / language / lists }
  {
    table .tl_gset:N = \g_istqb_translation_list_of_tables_name_tl,
    figure .tl_gset:N = \g_istqb_translation_list_of_figures_name_tl,
  }
\keys_define:nn
  { istqb / language / page }
  {
    1 .tl_gset:N = \istqbpagename,
    2 .tl_gset:N = \istqboutofname,
  }
\keys_define:nn
  { istqb / language / provided-by }
  {
    1 .tl_gset:N = \istqbprovidedbysingularname,
    2 .tl_gset:N = \istqbprovidedbypluralname,
  }
\keys_define:nn
  { istqb / language / business-outcomes }
  {
    1 .tl_gset:N = \istqbbusinessoutcomecode,
    2 .tl_gset:N = \istqbbusinessoutcomedescription,
  }
\cs_new:Nn
  \__istqb_gset_with_spaces:Nn
  {
    \tl_gset:Nn
      #1
      { #2 }
    \regex_if_match:nnF
      { ^, }
      { #2 }
      {
        \tl_gput_left:Nn
          #1
          { ~ }
      }
    \tl_gput_right:Nn
      #1
      { ~ }
  }
\tl_new:N \g_istqb_list_delimiter_two_tl
\tl_new:N \g_istqb_list_delimiter_many_tl
\tl_new:N \g_istqb_list_delimiter_last_tl
\keys_define:nn
  { istqb / language / list-delimiters }
  {
    1 .code:n = {
      \__istqb_gset_with_spaces:Nn
        \g_istqb_list_delimiter_two_tl
        { #1 }
    },
    2 .code:n = {
      \__istqb_gset_with_spaces:Nn
        \g_istqb_list_delimiter_many_tl
        { #1 }
    },
    3 .code:n = {
      \__istqb_gset_with_spaces:Nn
        \g_istqb_list_delimiter_last_tl
        { #1 }
    },
  }
\prop_new:N \g_istqb_reference_labels_prop
\seq_gput_right:Nn
  \g_istqb_language_allow_unknown_keys_seq
  { istqb / language / reference-labels }
\keys_define:nn
  { istqb / language / reference-labels }
  {
    unknown .code:n = {
      \prop_gput:NVn
        \g_istqb_reference_labels_prop
        \l_keys_key_str
        { #1 }
    },
  }
\tl_new:N
  \g_istqb_translation_table_name_tl
\tl_new:N
  \g_istqb_translation_figure_name_tl
\keys_define:nn
  { istqb / language / float-labels }
  {
    table .tl_gset:N = \g_istqb_translation_table_name_tl,
    figure .tl_gset:N = \g_istqb_translation_figure_name_tl,
  }
\tl_new:N
  \g_istqb_translation_traceability_matrix_section_name_tl
\tl_new:N
  \g_istqb_translation_traceability_matrix_business_outcomes_tl
\tl_new:N
  \g_istqb_translation_traceability_matrix_learning_objective_number_tl
\tl_new:N
  \g_istqb_translation_traceability_matrix_learning_objective_description_tl
\keys_define:nn
  { istqb / language / traceability-matrix }
  {
    section-name .tl_gset:N =
      \g_istqb_translation_traceability_matrix_section_name_tl,
    business-outcomes .tl_gset:N =
      \g_istqb_translation_traceability_matrix_business_outcomes_tl,
    learning-objective / number .tl_gset:N =
      \g_istqb_translation_traceability_matrix_learning_objective_number_tl,
    learning-objective / description .tl_gset:N =
      \g_istqb_translation_traceability_matrix_learning_objective_description_tl,
  }
\tl_new:N
  \g_istqb_translation_traceability_matrix_description_tl
\tl_new:N
  \g_istqb_translation_traceability_matrix_description_of_tl
\keys_define:nn
  { istqb / language / traceability-matrix / description }
  {
    1 .tl_gset:N =
      \g_istqb_translation_traceability_matrix_description_tl,
    2 .tl_gset:N =
      \g_istqb_translation_traceability_matrix_description_of_tl,
  }

% Metadata
\tl_new:N
  \g_istqb_language_tl
\tl_gset:Nn
  \g_istqb_language_tl
  { en }
\bool_new:N
  \g_istqb_further_reading_bool
\bool_gset_true:N
  \g_istqb_further_reading_bool
\bool_new:N
  \g_istqb_metadata_hyphenation_bool
\bool_new:N
  \g_istqb_metadata_hyphenation_specified_bool
\bool_gset_false:N
  \g_istqb_metadata_hyphenation_specified_bool
\RequirePackage { lineno }
\cs_gset:Npn
  \linenumberfont
  { \normalfont \normalsize \sffamily }
\keys_define:nn
  { istqb / metadata }
  {
    schema .tl_gset:N = \g_istqb_schema_tl,
    level .tl_gset:N = \g_istqb_level_tl,
    type .tl_gset:N = \g_istqb_type_tl,
    title .tl_gset:N = \g_istqb_title_tl,
    code .tl_gset:N = \g_istqb_code_tl,
    version .tl_gset:N = \g_istqb_version_tl,
    date .tl_gset:N = \g_istqb_date_tl,
    release .tl_gset:N = \g_istqb_release_tl,
    prefix .tl_gset:N = \g_istqb_prefix_tl,
    logo .tl_gset:N = \g_istqb_logo_tl,
    compatibility .tl_gset:N = \g_istqb_compatibility_tl,
    language .tl_gset:N = \g_istqb_language_tl,
    organization .tl_gset:N = \g_istqb_organization_tl,
    further-reading .bool_gset:N = \g_istqb_further_reading_bool,
    hyphenation .code:n = {
      \bool_gset_true:N
        \g_istqb_metadata_hyphenation_specified_bool
      \str_if_eq:nnTF
        { #1 }
        { true }
        {
          \bool_gset_true:N
            \g_istqb_metadata_hyphenation_bool
        }
        {
          \bool_gset_false:N
            \g_istqb_metadata_hyphenation_bool
        }
    },
    line-numbers .code:n = {
      \tl_if_eq:nnT
        { #1 }
        { true }
        { \AtBeginDocument { \linenumbers } }
    },
    pdf-output .code:n = { },
    docx-output .code:n = { },
    epub-output .code:n = { },
    html-output .code:n = { },
  }
\markdownSetupSnippet
  { metadata }
  {
    jekyllData,
    expectJekyllData,
    ensureJekyllData,
    renderers = {
      jekyllDataTypographicString = ,
      jekyllData(ProgrammaticString|Number|Boolean) = {
        \keys_set:nn
          { istqb/metadata }
          { { #1 } = { #2 } }
      },
      jekyllDataSequenceBegin = {
        \str_case:nn
          { #1 }
          {
            { provided-by } {
              % Third-party organizations
              \markdownSetup {
                code = \group_begin:,
                renderers = {
                  jekyllDataSequenceEnd =
                },
                snippet = istqb / common
                  / metadata / provided-by,
                renderers = {
                  jekyllDataSequenceEnd +=
                    \group_end:
                },
              }
            }
          }
      },
      jekyllDataMappingBegin = {
        \str_case:nn
          { #1 }
          {
            { variables } {
              % User-defined variables
              \markdownSetup {
                code = \group_begin:,
                renderers = {
                  jekyllDataMappingEnd =
                },
                snippet = istqb / common
                  / metadata / variables,
                renderers = {
                  jekyllDataMappingEnd +=
                    \group_end:
                },
              }
            }
          }
      },
      jekyllDataEnd = {
        \istqb_load_language:V
          \g_istqb_language_tl
      },
    },
  }
\cs_generate_variant:Nn
  \istqb_load_language:n
  { V }
\cs_generate_variant:Nn
  \iow_open:Nn
  { Ne }
\cs_generate_variant:Nn
  \iow_now:Nn
  { Ne }
\cs_generate_variant:Nn
  \str_uppercase:n
  { V }
\markdownSetupSnippet
  { metadata / provided-by }
  {
    renderers = {
      jekyllData(ProgrammaticString|Number) = {
        % Short-hand definition
        \seq_gput_right:Nn
          \g_istqb_third_parties_seq
          { #2 }
      },
      jekyllDataMappingBegin = {
        % Verbose definition
        \markdownSetup {
          code = \group_begin:,
          renderers = {
            jekyllDataMappingEnd =
          },
          snippet = istqb / common
            / metadata / provided-by
            / verbose,
          renderers = {
            jekyllDataMappingEnd +=
              \group_end:
          },
        }
      },
    },
  }
\tl_new:N \l_istqb_third_party_name_tl
\tl_new:N \l_istqb_third_party_logo_tl
\keys_define:nn
  { istqb / metadata / provided-by }
  {
    name .tl_set:N =
      \l_istqb_third_party_name_tl,
    logo .tl_set:N =
      \l_istqb_third_party_logo_tl,
  }
\markdownSetupSnippet
  { metadata / provided-by / verbose }
  {
    renderers = {
      jekyllData(ProgrammaticString|Number) = {
        \keys_set:nn
          { istqb / metadata / provided-by }
          { { #1 } = { #2 } }
      },
      jekyllDataMappingEnd = {
        \seq_gput_right:NV
          \g_istqb_third_parties_seq
          \l_istqb_third_party_name_tl
        \tl_if_empty:VF
          \l_istqb_third_party_logo_tl
          {
            \prop_gput:NVV
              \g_istqb_third_party_logos_prop
              \l_istqb_third_party_name_tl
              \l_istqb_third_party_logo_tl
          }
      },
    }
  }
\markdownSetupSnippet
  { metadata / variables }
  {
    renderers = {
      % Ignore user-defined variables.
      jekyllData(Typographic|Programmatic)String = ,
    },
  }

% Traceability matrix
\markdownSetupSnippet
  { traceability-matrix }
  {
    jekyllData,
    expectJekyllData,
    ensureJekyllData,
    renderers = {
      jekyllDataMappingBegin = {
        \str_if_eq:nnF
          { #1 }
          { traceability-matrix }
          {
            \markdownSetup {
              code = \group_begin:,
              renderers = {
                jekyllDataMappingEnd =
              },
              snippet = istqb / common
                / traceability-matrix
                / content,
              renderers = {
                jekyllDataMappingEnd +=
                  \group_end:
              },
            }
          }
      },
      jekyllDataEnd = {
        \istqbsection
          {
            \tl_use:N
              \g_istqb_translation_traceability_matrix_section_name_tl
          }
        \tl_use:N
          \g_istqb_translation_traceability_matrix_description_tl

        \tl_if_empty:NF
          \g_istqb_title_tl
          {
            {}~
            \tl_use:N
              \g_istqb_translation_traceability_matrix_description_of_tl
            {}~
            \tl_if_empty:NF
              \g_istqb_level_tl
              {
                \tl_use:N
                  \g_istqb_level_tl
                {}~
              }
            \tl_if_empty:NF
              \g_istqb_title_tl
              {
                \tl_use:N
                  \g_istqb_title_tl
                {}~
              }
            \unskip
          }
        .
      },
    },
    snippet = istqb / common
      / traceability-matrix
      / number-of-related-learning-objectives,
    renderers = {
      jekyllDataBegin = {
        \istqblandscapebegin
      },
      jekyllDataEnd += {
        \istqblandscapeend
        \cs_gset:Npn
          \markdownRendererDocumentBegin
          {
            \restoregeometry
            \cs_gset:Npn
              \markdownRendererDocumentBegin
              { }
          }
      },
    },
  }
\prop_new:N \g_istqb_traceability_matrix_prop
\prop_new:N \g_istqb_business_outcomes_diagonal_prop
\tl_new:N \l_istqb_current_learning_objective_tl
\seq_new:N \l_istqb_current_learning_objective_seq
\markdownSetupSnippet
  { traceability-matrix / content }
  {
    renderers = {
      jekyllDataNumber = {
        \prop_gput:Nnn
          \g_istqb_traceability_matrix_prop
          { #1 }
          { #2 }
        \prop_get:NnNTF
          \g_istqb_business_outcomes_diagonal_prop
          { #2 }
          \l_tmpa_tl
          {
            \int_set:Nn
              \l_tmpa_int
              { \l_tmpa_tl + 1 }
            \prop_gput:NnV
              \g_istqb_business_outcomes_diagonal_prop
              { #2 }
              \l_tmpa_int
          }
          {
            \prop_gput:Nnn
              \g_istqb_business_outcomes_diagonal_prop
              { #2 }
              { 1 }
          }
      },
      jekyllDataSequenceBegin = {
        \group_begin:
        \tl_set:Nn
          \l_istqb_current_learning_objective_tl
          { #1 }
        \markdownSetup {
          renderers = {
            jekyllDataSequenceEnd =
          },
          snippet = istqb / common
            / traceability-matrix
            / content / sequence,
          renderers = {
            jekyllDataSequenceEnd +=
              \group_end:
          },
        }
      },
    },
  }
\markdownSetupSnippet
  { traceability-matrix / content / sequence }
  {
    renderers = {
      jekyllDataNumber = {
        \seq_put_right:Nn
          \l_istqb_current_learning_objective_seq
          { #2 }
        \prop_get:NnNTF
          \g_istqb_business_outcomes_diagonal_prop
          { #2 }
          \l_tmpa_tl
          {
            \int_set:Nn
              \l_tmpa_int
              { \l_tmpa_tl + 1 }
            \prop_gput:NnV
              \g_istqb_business_outcomes_diagonal_prop
              { #2 }
              \l_tmpa_int
          }
          {
            \prop_gput:Nnn
              \g_istqb_business_outcomes_diagonal_prop
              { #2 }
              { 1 }
          }
      },
      jekyllDataSequenceEnd = {
        \clist_set_from_seq:NN
          \l_tmpa_clist
          \l_istqb_current_learning_objective_seq
        \prop_gput:NVV
          \g_istqb_traceability_matrix_prop
          \l_istqb_current_learning_objective_tl
          \l_tmpa_clist
      },
    },
  }
\RequirePackage
  { tabularray }
\RequirePackage
  { pifont }
\tl_new:N \l_istqb_traceability_matrix_parameters_tl
\tl_new:N \l_istqb_traceability_matrix_colspec_tl
\tl_new:N \l_istqb_traceability_matrix_body_tl
\tl_new:N \l_istqb_traceability_matrix_tl
\clist_new:N \l_istqb_traceability_matrix_subchapter_numbers_clist
\clist_new:N \l_istqb_traceability_matrix_learning_objective_numbers_clist
\clist_new:N \l_istqb_traceability_matrix_related_business_outcome_numbers_clist
\markdownSetupSnippet
  { traceability-matrix / number-of-related-learning-objectives }
  {
    renderers = {
      jekyllDataEnd += {
        \group_begin:
        % Set how the table looks.
        \DefTblrTemplate { contfoot-text } { default } { }
        \DefTblrTemplate { conthead-text } { default } { }
        \DefTblrTemplate { caption } { default } { }
        \DefTblrTemplate { conthead } { default } { }
        \DefTblrTemplate { capcont } { default } { }
        % Construct the table parameters.
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_parameters_tl
          {
            cell { 1 } { 1 } = { bg = istqbbluetableheader },
            cell { 1 } { 3-Z } = { cmd = { \rotatebox [ origin = c ] { 270 } } },
            row { 1-Z } = { rowsep+ = 1pt },
            rowhead = 1,
            hlines,
            vlines,
            hspan = minimal,
          }
        \tl_set:Nn
          \l_istqb_traceability_matrix_colspec_tl
          { l X [ m ] }
        \int_step_inline:nn
          {
            \seq_count:N
              \g_istqb_business_outcomes_numbers_seq
          }
          {
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_colspec_tl
              { c }
          }
        \tl_put_right:Nx
          \l_istqb_traceability_matrix_parameters_tl
          { colspec = { \tl_use:N \l_istqb_traceability_matrix_colspec_tl }, }
        % Construct the table body for the number of related learning objectives.
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_body_tl
          {
            \SetCell
              [ c = 2 ]
              { halign = l, valign = m, bg = istqbbluetableheader }
            \Large
            \RaggedRight
          }
        \tl_set:NV
          \l_tmpa_tl
          \g_istqb_translation_traceability_matrix_business_outcomes_tl
        \tl_if_empty:NF
          \g_istqb_title_tl
            {
              \tl_put_right:Nn
                \l_tmpa_tl
                { :~ }
              \tl_if_empty:NF
                \g_istqb_level_tl
                {
                  \tl_put_right:NV
                    \l_tmpa_tl
                    \g_istqb_level_tl
                  \tl_put_right:Nn
                    \l_tmpa_tl
                    { ~ }
                }
              \tl_if_empty:NF
                \g_istqb_title_tl
                {
                  \tl_put_right:NV
                    \l_tmpa_tl
                    \g_istqb_title_tl
                  \tl_put_right:Nn
                    \l_tmpa_tl
                    { ~ }
                }
              \tl_put_right:Nn
                \l_tmpa_tl
                { \unskip }
            }
        \tl_put_right:Nx
          \l_istqb_traceability_matrix_body_tl
          { { \tl_use:N \l_tmpa_tl } }
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_body_tl
          { & }
        \seq_map_inline:Nn
          \g_istqb_business_outcomes_numbers_seq
          {
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_body_tl
              { & }
            \tl_put_right:NV
              \l_istqb_traceability_matrix_body_tl
              \g_istqb_prefix_tl
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_body_tl
              { -BO ##1 }
          }
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_body_tl
          { \\ }
        \seq_map_inline:Nn
          \g_istqb_business_outcomes_numbers_seq
          {
            \tl_put_right:NV
              \l_istqb_traceability_matrix_body_tl
              \g_istqb_prefix_tl
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_body_tl
              { -BO ##1 & }
            \prop_get:NnN
              \g_istqb_business_outcomes_names_prop
              { ##1 }
              \l_tmpa_tl
            \tl_put_right:NV
              \l_istqb_traceability_matrix_body_tl
              \l_tmpa_tl
            \seq_map_inline:Nn
              \g_istqb_business_outcomes_numbers_seq
              {
                \tl_put_right:Nn
                  \l_istqb_traceability_matrix_body_tl
                  { & }
                \int_compare:nNnT
                  { ##1 } = { ####1 }
                  {
                    \prop_get:NnNTF
                      \g_istqb_business_outcomes_diagonal_prop
                      { ##1 }
                      \l_tmpa_tl
                      {
                        \tl_put_right:NV
                          \l_istqb_traceability_matrix_body_tl
                          \l_tmpa_tl
                      }
                      {
                        \tl_put_right:Nn
                          \l_istqb_traceability_matrix_body_tl
                          { 0 }
                      }
                  }
              }
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_body_tl
              { \\ }
          }
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_body_tl
          { \pagebreak }
        % Construct the table parameters and body for the traceability matrix.
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_body_tl
          {
            \SetCell { bg = istqbbluetableheader }
            \tl_use:N
              \g_istqb_translation_traceability_matrix_learning_objective_number_tl
            &
            \SetCell { bg = istqbbluetableheader }
            \tl_use:N
              \g_istqb_translation_traceability_matrix_learning_objective_description_tl
            \\
          }
        % Print out chapters.
        \seq_map_inline:Nn
          \g_istqb_learning_objective_chapter_numbers_seq
          {
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_body_tl
              { \SetCell { bg = istqbgreentableheader } ##1 & }
            \prop_get:NnN
              \g_istqb_learning_objective_chapter_names_prop
              { ##1 }
              \l_tmpa_tl
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_body_tl
              { \SetCell { bg = istqbgreentableheader } }
            \tl_put_right:NV
              \l_istqb_traceability_matrix_body_tl
              \l_tmpa_tl
            \tl_put_right:Nn
              \l_istqb_traceability_matrix_body_tl
              { \\ }
            % Print out subchapters.
            \prop_get:NnN
              \g_istqb_learning_objective_subchapter_numbers_prop
              { ##1 }
              \l_istqb_traceability_matrix_subchapter_numbers_clist
            \clist_map_inline:Nn
              \l_istqb_traceability_matrix_subchapter_numbers_clist
              {
                \tl_put_right:Nn
                  \l_istqb_traceability_matrix_body_tl
                  { \SetCell { bg = istqbbluetableheader } ##1.####1 & }
                \prop_get:NnN
                  \g_istqb_learning_objective_subchapter_names_prop
                  { ##1.####1 }
                  \l_tmpa_tl
                \tl_put_right:Nn
                  \l_istqb_traceability_matrix_body_tl
                  { \SetCell { bg = istqbbluetableheader } }
                \tl_put_right:NV
                  \l_istqb_traceability_matrix_body_tl
                  \l_tmpa_tl
                \tl_put_right:Nn
                  \l_istqb_traceability_matrix_body_tl
                  { \\ }
                % Print out learning objectives.
                \prop_get:NnN
                  \g_istqb_learning_objective_numbers_prop
                  { ##1.####1 }
                  \l_istqb_traceability_matrix_learning_objective_numbers_clist
                \clist_map_inline:Nn
                  \l_istqb_traceability_matrix_learning_objective_numbers_clist
                  {
                    \tl_put_right:NV
                      \l_istqb_traceability_matrix_body_tl
                      \g_istqb_prefix_tl
                    \tl_put_right:Nn
                      \l_istqb_traceability_matrix_body_tl
                      { - ##1.####1.########1 & }
                    \prop_get:NnN
                      \g_istqb_learning_objective_names_prop
                      { ##1.####1.########1 }
                      \l_tmpa_tl
                    \tl_put_right:NV
                      \l_istqb_traceability_matrix_body_tl
                      \l_tmpa_tl
                    \prop_get:NnN
                      \g_istqb_learning_objective_k_levels_prop
                      { ##1.####1.########1 }
                      \l_tmpa_tl
                    \tl_put_right:Nn
                      \l_istqb_traceability_matrix_body_tl
                      { ~( }
                    \tl_put_right:NV
                      \l_istqb_traceability_matrix_body_tl
                      \l_tmpa_tl
                    \tl_put_right:Nn
                      \l_istqb_traceability_matrix_body_tl
                      { ) }
                    % Print out the related business outcomes.
                    \prop_get:NnNT
                      \g_istqb_traceability_matrix_prop
                      { ##1.####1.########1 }
                      \l_istqb_traceability_matrix_related_business_outcome_numbers_clist
                      {
                        \seq_map_inline:Nn
                          \g_istqb_business_outcomes_numbers_seq
                          {
                            \tl_put_right:Nn
                              \l_istqb_traceability_matrix_body_tl
                              { & }
                            \clist_if_in:NnT
                              \l_istqb_traceability_matrix_related_business_outcome_numbers_clist
                              { ################1 }
                              {
                                \tl_put_right:Nn
                                  \l_istqb_traceability_matrix_body_tl
                                  { \ding { 53 } }
                              }
                          }
                      }
                    \tl_put_right:Nn
                      \l_istqb_traceability_matrix_body_tl
                      { \\ }
                  }
              }
          }
        % Construct the final table.
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_tl
          { \begin { longtblr } [ entry = none ] }
        \tl_put_right:Nx
          \l_istqb_traceability_matrix_tl
          { { \tl_use:N \l_istqb_traceability_matrix_parameters_tl } }
        \tl_put_right:NV
          \l_istqb_traceability_matrix_tl
          \l_istqb_traceability_matrix_body_tl
        \tl_put_right:Nn
          \l_istqb_traceability_matrix_tl
          { \end { longtblr } }
        % Typeset the final table.
        \tl_use:N
          \l_istqb_traceability_matrix_tl
        \group_end:
      },
    },
  }

% Images
\markdownSetup
  {
    linkAttributes,
    renderers = {
      image = {
        \bool_if:NTF
          \g_istqb_intable_bool
          { \includegraphics { #3 } }
          {
            \begin{figure}
              \centering
              \includegraphics { #3 }
              \tl_if_empty:nF
                { #4 }
                { \caption { #4 } }
              \tl_set:Nx
                \l_tmpa_tl
                {
                  \str_lowercase:n
                    { figure:#1 }
                }
              \exp_args:NV
                \label
                \l_tmpa_tl
            \end{figure}
          }
      },
      imageAttributeContextBegin = {
        \group_begin:
        \markdownSetup
          {
            renderers = {
              attributeKeyValue = {
                \setkeys  % Pass the key-value
                { Gin } % to graphicx package
                { { ##1 } = { ##2 } }
              },
            },
          }
      },
      imageAttributeContextEnd = {
        \group_end:
      },
    },
  }

% Paragraphs
\cs_gset_eq:NN
  \markdownRendererParagraphSeparator
  \markdownRendererInterblockSeparator

% Headings
\seq_new:N \l_istqb_header_identifiers_seq  % noqa: w415
\tl_new:N \l_istqb_business_outcomes_table_tl
\seq_new:N \g_istqb_business_outcomes_numbers_seq
\prop_new:N \g_istqb_business_outcomes_names_prop
\prop_new:N \g_istqb_hands_on_objectives_prop
\markdownSetup
  {
    headerAttributes,
    renderers = {
      headingOne = {
        \istqbsection { #1 }
      },
      headingTwo = {
        \istqbsubsection { #1 }
      },
      headingThree = {
        \istqbsubsubsection { #1 }
      },
      headingFour = {
        \paragraph { #1 }
        \leavevmode
      },
      headerAttributeContextBegin = {
        \markdownSetup
          {
            renderers = {
              attributeClassName = ,
              %% Unnumbered sections
              attributeClassName += {
                \tl_if_eq:nnT
                  { ##1 }
                  { unnumbered }
                  {
                    \group_begin:
                    \markdownSetup
                      {
                        %% Stop numbering all levels of sections.
                        renderers = {
                          headingOne = {
                            \istqbunnumberedsection { ####1 }
                          },
                          headingTwo = {
                            \istqbunnumberedsubsection { ####1 }
                          },
                          headingThree = {
                            \istqbunnumberedsubsubsection { ####1 }
                          },
                          %% Count the number of nested sections, so that we only start numbering
                          %% sections again when the top-level unnumbered section has ended.
                          sectionBegin = {
                            \group_begin:
                          },
                          sectionEnd = {
                            \group_end:
                          },
                        }
                      }
                  }
              },
              %% Landscape sections
              attributeClassName += {
                \tl_if_eq:nnT
                  { ##1 }
                  { landscape }
                  {
                    \istqblandscapebegin
                    \markdownSetup
                      {
                        renderers = {
                          sectionBegin = {
                            %% Prevent nested sections from ending landscape mode prematurely.
                            \group_begin:
                            \markdownSetup
                              {
                                renderers = {
                                  sectionBegin = { \group_begin: },
                                  sectionEnd = { \group_end: },
                                },
                              }
                          },
                          sectionEnd = {
                            \istqblandscapeend
                          },
                        }
                      }
                  }
              },
              %% Revision history
              attributeClassName += {
                \tl_if_eq:nnT
                  { ##1 }
                  { revision-history }
                  {
                    \def \markdownLaTeXRenderTableRow ####1
                      {
                        \markdownLaTeXColumnCounter = 0
                        \ifnum \markdownLaTeXRowCounter = 0 \relax
                          \markdownLaTeXReadAlignments ####1
                          \markdownLaTeXTable = \expandafter \expandafter \expandafter {
                            \expandafter \the \expandafter \markdownLaTeXTable \expandafter {
                              \the \markdownLaTeXTableAlignment } }
                        \else
                          \markdownLaTeXRenderTableCell ####1
                        \fi
                        \advance \markdownLaTeXRowCounter by 1 \relax
                        \ifnum \markdownLaTeXRowCounter > \markdownLaTeXRowTotal \relax
                          \addto@hook
                            \markdownLaTeXTable
                            { \end { istqbrevisionhistory } }
                          \the \markdownLaTeXTable
                          \expandafter \@gobble
                        \fi \markdownLaTeXRenderTableRow
                      }
                    \def \markdownLaTeXReadAlignments ####1
                      {
                        \advance \markdownLaTeXColumnCounter by 1 \relax
                        % Ignore alignment information, since the alignment in revision history is predetermined.
                        \ifnum\markdownLaTeXColumnCounter < \markdownLaTeXColumnTotal \relax \else
                          \expandafter \@gobble
                        \fi \markdownLaTeXReadAlignments
                      }
                    \markdownSetup
                      {
                        renderers = {
                          table = {
                            \markdownLaTeXTable = { }
                            \markdownLaTeXTableAlignment = { }
                            \addto@hook
                              \markdownLaTeXTable
                              { \begin { istqbrevisionhistory } }
                            \markdownLaTeXRowCounter = 0
                            \markdownLaTeXRowTotal = ####2
                            \markdownLaTeXColumnTotal = ####3
                            \markdownLaTeXRenderTableRow
                          },
                        }
                      }
                  }
              },
              %% Hands-on objective sections
              attributeClassName += {
                \tl_if_eq:nnT
                  { ##1 }
                  { hands-on-objective }
                  {
                    \group_begin:
                    \markdownSetup
                      {
                        renderers = {
                          headingFour = {
                            \tl_set:Nn
                              \l_tmpa_tl
                              { }
                            \int_case:nnF
                              { \g_istqb_previous_heading_level_int }
                              {
                                { 2 } {
                                  \tl_put_right:Nx
                                    \l_tmpa_tl
                                    { \thesubsection }
                                  \tl_set:Nx
                                    \l_tmpb_tl
                                    {
                                      \thesubsection
                                      { ~ }
                                      \tl_use:N
                                        \g_istqb_current_section_name_tl
                                    }
                                }
                                { 3 } {
                                  \tl_put_right:Nx
                                    \l_tmpa_tl
                                    { \thesubsubsection }
                                  \tl_set:Nx
                                    \l_tmpb_tl
                                    {
                                      \thesubsubsection
                                      { ~ }
                                      \tl_use:N
                                        \g_istqb_current_subsection_name_tl
                                    }
                                }
                              }
                              {
                                \msg_error:nnnV
                                  { istqb }
                                  { incorrect-heading-objective-section-level }
                                  { ####1 }
                                  \g_istqb_previous_heading_level_int
                              }
                            \tl_put_right:Nn
                              \l_tmpa_tl
                              {
                                { ~ }
                                ####1
                              }
                            \iow_now:ce
                              { @auxout }
                              {
                                \token_to_str:N
                                  \istqbregisterhandsonobjective
                                  { \thesection }
                                  {
                                    \tl_use:N
                                      \l_tmpb_tl
                                  }
                                  {
                                    \tl_use:N
                                      \g_istqb_prefix_tl
                                    -
                                    \tl_use:N
                                      \l_tmpa_tl
                                  }
                              }
                            \begin
                              { istqb hands on objective section }
                              [
                                frametitle =
                                  {
                                    Hands-On~Objective~HO-
                                    \tl_use:N
                                      \l_tmpa_tl
                                  }
                              ]
                          },
                          (sectionEnd|thematicBreak) = {
                            \end
                              { istqb hands on objective section }
                            \group_end:
                          },
                        },
                      }
                  }
              },
              %% Learning objectives
              attributeClassName += {
                \tl_if_eq:nnT
                  { ##1 }
                  { learning-objectives }
                  {
                    \group_begin:
                    \markdownSetup
                      {
                        renderers = {
                          olBegin = {
                            \group_begin:
                            \markdownSetup
                              {
                                renderers = {
                                  olBegin = {
                                    \group_begin:
                                    \markdownSetup
                                      {
                                        renderers = {
                                          olItemWithNumber = {
                                            \def\next################################1\markdownRendererOlItemEnd
                                              {
                                                \istqbsubobjective { ################################1 }
                                                \markdownRendererOlItemEnd
                                              }
                                            \next
                                          },
                                          olEnd = {
                                            \end { istqb subobjectives }
                                            \group_end:
                                          },
                                        }
                                      }
                                    \begin { istqb subobjectives }
                                  },
                                  olItemWithNumber = {
                                    \def\next################1\markdownRendererInterblockSeparator
                                      {
                                        \istqbobjective { ################1 }
                                        \markdownRendererInterblockSeparator
                                      }
                                    \next
                                  },
                                  olEnd = {
                                    \end { istqb objectives }
                                    \group_end:
                                    \istqb_typeset_hands_on_objectives:x
                                      { \thesection }
                                  },
                                }
                              }
                          },
                          sectionEnd = {
                            \clearpage
                            \group_end:
                          },
                        }
                      }
                    \begin { istqb objectives }
                  }
              },
              %% Business outcomes
              attributeClassName += {
                \tl_if_eq:nnT
                  { ##1 }
                  { business-outcomes }
                  {
                    \group_begin:
                    \markdownSetup
                      {
                        renderers = {
                          olBegin = {
                            \group_begin:
                            \tl_set:Nn
                              \l_istqb_business_outcomes_table_tl
                              {
                                \begin { istqbtable } { |l|X| }
                                \istqbbusinessoutcomecode &
                                \istqbbusinessoutcomedescription \\ \hline
                              }
                            \markdownSetup
                              {
                                renderers = {
                                  olItemWithNumber = {
                                    \def\next################1\markdownRendererOlItemEnd
                                      {
                                        \seq_gput_right:Nn
                                          \g_istqb_business_outcomes_numbers_seq
                                          { ########1 }
                                        \prop_gput:Nnn
                                          \g_istqb_business_outcomes_names_prop
                                          { ########1 }
                                          { ################1 }
                                        \tl_put_right:Nn
                                          \l_istqb_business_outcomes_table_tl
                                          {
                                            \g_istqb_prefix_tl - BO########1 &
                                            ################1 \\ \hline
                                          }
                                      }
                                    \next
                                  },
                                  olEnd = {
                                    \tl_put_right:Nn
                                      \l_istqb_business_outcomes_table_tl
                                      {
                                        \end { istqbtable }
                                      }
                                    \tl_use:N
                                      \l_istqb_business_outcomes_table_tl
                                    \group_end:
                                  },
                                }
                              }
                          },
                          sectionEnd = {
                            \group_end:
                          },
                        }
                      }
                  }
              },
              attributeIdentifier = {
                \group_begin:
                \def\next####1{
                  \def####1########1
                    {
                      \group_end:
                      ####1 { ########1 }
                      \label { section:##1 }
                    }
                }
                \next\markdownRendererHeadingOne
                \next\markdownRendererHeadingTwo
                \next\markdownRendererHeadingThree
                \next\markdownRendererHeadingFour
                \next\markdownRendererHeadingFive
                \next\markdownRendererHeadingSix
              },
            },
          }
      },
      headerAttributeContextEnd = {},
    },
  }
\msg_new:nnn
  { istqb }
  { incorrect-heading-objective-section-level }
  {
    Hands-on~objective~"#1"~appeared~in~section~level~#2~but~either~2~(section,~X.Y)~or~3~(subsection,~X.Y.Z)~was~expected.
  }

%% Lists of hands-on objectives at the beginnings of chapters
\cs_new:Npn
  \istqbregisterhandsonobjective
  #1#2#3
  {
    \prop_get:NnNF
      \g_istqb_hands_on_objectives_prop
      { #1 }
      \l_tmpa_tl
      {
        \tl_set:Nn
          \l_tmpa_tl
          { \par }
      }
    \tl_put_right:Nn
      \l_tmpa_tl
      {
        \textbf{#2} \par
        #3 \par
      }
    \prop_gput:NnV
      \g_istqb_hands_on_objectives_prop
      { #1 }
      \l_tmpa_tl
  }
\cs_new:Nn
  \istqb_typeset_hands_on_objectives:n
  {
    \prop_get:NnNT
      \g_istqb_hands_on_objectives_prop
      { #1 }
      \l_tmpa_tl
      {
        \markdownRendererHeadingFour
          { Hands-On~Objectives~for~Chapter~#1: }
        \tl_use:N
          \l_tmpa_tl
        \par \kern 0.3in
      }
  }
\cs_generate_variant:Nn
  \istqb_typeset_hands_on_objectives:n
  { x }

% Tables
\prop_new:N \g_istqb_multi_row_prop
\def \markdownLaTeXRenderTableRow #1
  {
    \markdownLaTeXColumnCounter = 0
    \ifnum \markdownLaTeXRowCounter = 0 \relax
      \markdownLaTeXReadAlignments #1
      \markdownLaTeXTable = \expandafter \expandafter \expandafter {
        \expandafter \the \expandafter \markdownLaTeXTable \expandafter {
          \the \markdownLaTeXTableAlignment } }
    \else
      \markdownLaTeXRenderTableCell #1
    \fi
    \advance \markdownLaTeXRowCounter by 1 \relax
    \ifnum \markdownLaTeXRowCounter > \markdownLaTeXRowTotal \relax
      \markdownLaTeXTable = \expandafter \expandafter \expandafter {
        \expandafter \the \expandafter \markdownLaTeXTable
          \the \markdownLaTeXTableEnd }
      \the \markdownLaTeXTable
      \expandafter \@gobble
    \fi \markdownLaTeXRenderTableRow
  }
\def \markdownLaTeXReadAlignments #1
  {
    \advance \markdownLaTeXColumnCounter by 1 \relax
    \if #1 d
      \addto@hook \markdownLaTeXTableAlignment { X| }
    \else
      \addto@hook \markdownLaTeXTableAlignment { #1| }
    \fi
    \ifnum\markdownLaTeXColumnCounter < \markdownLaTeXColumnTotal \relax \else
      \expandafter \@gobble
    \fi \markdownLaTeXReadAlignments
  }
\def \markdownLaTeXRenderTableCell #1
  {
    \advance \markdownLaTeXColumnCounter by 1 \relax
    \tl_set:Nn
      \l_tmpa_tl
      { \markdownLaTeXRowCounter = }
    \tl_put_right:Nx
      \l_tmpa_tl
      { \the \markdownLaTeXRowCounter }
    \tl_put_right:Nn
      \l_tmpa_tl
      { \relax }
    \tl_put_right:Nn
      \l_tmpa_tl
      { \markdownLaTeXColumnCounter = }
    \tl_put_right:Nx
      \l_tmpa_tl
      { \the \markdownLaTeXColumnCounter }
    \tl_put_right:Nn
      \l_tmpa_tl
      { \relax }
    \exp_args:NNV
      \addto@hook
      \markdownLaTeXTable
      \l_tmpa_tl
    \ifnum \markdownLaTeXColumnCounter < \markdownLaTeXColumnTotal \relax
      \addto@hook
        \markdownLaTeXTable
        { #1 & }
    \else
      \addto@hook
        \markdownLaTeXTable
        {
          #1
          \tl_set:Nn
            \l_tmpa_tl
            { \\ }
          \int_step_inline:nn
            { \the \markdownLaTeXColumnTotal }
            {
              \tl_set:Nx
                \l_tmpb_tl
                { \the \markdownLaTeXRowCounter }
              \tl_put_right:Nn
                \l_tmpb_tl
                { ,##1 }
              \prop_if_in:NVF
                \g_istqb_multi_row_prop
                \l_tmpb_tl
                {
                  \tl_put_right:Nn
                    \l_tmpa_tl
                    { \cline { ##1 - ##1 } }
                }
            }
          \tl_use:N
            \l_tmpa_tl
        }
      \expandafter \@gobble
    \fi \markdownLaTeXRenderTableCell
  }
\bool_new:N \g_istqb_intable_bool
\tl_new:N \l_istqb_table_identifier_tl
\markdownSetup
  {
    pipeTables,
    tableCaptions,
    tableAttributes,
    renderers = {
      tableAttributeContextBegin = {
        \group_begin:
        \markdownSetup
          {
            renderers = {
              attributeIdentifier = {
                \tl_set:Nx
                  \l_istqb_table_identifier_tl
                  {
                    \str_lowercase:n
                      { table:##1 }
                  }
              },
            },
          }
      },
      table = {
        \prop_clear:N
          \g_istqb_multi_row_prop
        \bool_gset_true:N
          \g_istqb_intable_bool
        \markdownLaTeXTable = { }
        \markdownLaTeXTableAlignment = { | }
        \markdownLaTeXTableEnd = {
          \end { istqbtable }
          \bool_gset_false:N
            \g_istqb_intable_bool
        }
        \tl_if_empty:nF
          { #1 }
          {
            \addto@hook
              \markdownLaTeXTable
              {
                \begin { table }
                \centering
              }
            \addto@hook
              \markdownLaTeXTableEnd
              {
                \caption { #1 }
              }
            \tl_if_empty:NF
              \l_istqb_table_identifier_tl
              {
                \addto@hook
                  \markdownLaTeXTableEnd
                  {
                    \label
                      { \l_istqb_table_identifier_tl }
                  }
              }
            \addto@hook
              \markdownLaTeXTableEnd
              {
                \end { table }
              }
          }
        \addto@hook
          \markdownLaTeXTable
          { \begin { istqbtable } }
        \markdownLaTeXRowCounter = 0
        \markdownLaTeXRowTotal = #2
        \markdownLaTeXColumnTotal = #3
        \markdownLaTeXRenderTableRow
      },
      tableAttributeContextEnd = {
        \group_end:
      },
    }
  }

% Relative references
\markdownSetup
  {
    relativeReferences,
  }
\renewcommand
  \markdownLaTeXRendererDirectOrIndirectLink[4]
  {
    %% If the URL begins with a hash sign, then we assume that it is a relative
    %% reference. Otherwise, we assume that it is an absolute URL.
    \tl_set:Nn
      \l_tmpa_tl
      { #3 }
    \tl_trim_spaces:N
      \l_tmpa_tl
    \tl_set:Nx
      \l_tmpb_tl
      {
        \tl_range:Nnn
          \l_tmpa_tl
          { 1 }
          { 1 }
      }
    \str_if_eq:NNTF
      \l_tmpb_tl
      \c_hash_str
      {
        \tl_set:Nx
          \l_tmpb_tl
          {
            \tl_range:Nnn
              \l_tmpa_tl
              { 2 }
              { -1 }
          }
        \tl_set:Nx
          \l_tmpa_tl
          {
            [
              \str_lowercase:V
                \l_tmpb_tl
            ]
          }
        \textit
          {
            \exp_last_unbraced:NV
              \hyperref
              \l_tmpa_tl
              { #1 }
          }
      }{
        \textit { \href { #3 } { #1 } }
      }
  }
\bool_new:N \l_istqb_reference_short_bool
\markdownSetup
  {
    linkAttributes,
    renderers = {
      linkAttributeContextBegin = {
        \group_begin:
        \bool_set_false:N
          \l_istqb_reference_short_bool
        \markdownSetup
          {
            renderers = {
              attributeClassName = {
                \tl_if_eq:nnT
                  { ##1 }
                  { unnumbered }
                  {
                    \bool_set_true:N
                      \l_istqb_reference_short_bool
                  }
              },
            },
          }
      },
      linkAttributeContextEnd = {
        \group_end:
      },
    },
  }
\tl_new:N \l_istqb_reference_label_tl
\tl_new:N \l_istqb_reference_number_tl
\renewcommand
  \markdownLaTeXRendererAutolink[2]
  {
    %% If the URL begins with a hash sign, then we assume that it is a relative
    %% reference. Otherwise, we assume that it is an absolute URL.
    \tl_set:Nn
      \l_tmpa_tl
      { #2 }
    \tl_trim_spaces:N
      \l_tmpa_tl
    \tl_set:Nx
      \l_tmpb_tl
      {
        \tl_range:Nnn
          \l_tmpa_tl
          { 1 }
          { 1 }
      }
    \str_if_eq:NNTF
      \l_tmpb_tl
      \c_hash_str
      {
        \tl_set:Nx
          \l_tmpb_tl
          {
            \tl_range:Nnn
              \l_tmpa_tl
              { 2 }
              { -1 }
          }
        \tl_set:Nx
          \l_tmpa_tl
          {
            \str_lowercase:V
              \l_tmpb_tl
          }
        \tl_set:NV
          \l_istqb_reference_label_tl
          \l_tmpa_tl
        \regex_replace_once:nnN
          { :.* }
          { }
          \l_istqb_reference_label_tl
        \prop_get:NVN
          \g_istqb_reference_labels_prop
          \l_istqb_reference_label_tl
          \l_istqb_reference_label_tl
        \tl_put_right:NV
          \l_tmpb_tl
          \l_istqb_reference_label_tl
        \tl_set:Nx
          \l_istqb_reference_number_tl
          {
            \exp_not:N \ref
              { \l_tmpa_tl }
          }
        \bool_if:NTF
          \l_istqb_reference_short_bool
          {
            \textit { \tl_use:N \l_istqb_reference_number_tl }
          }
          {
            \tl_set:Nx
              \l_tmpb_tl
              {
                \exp_not:N \textit
                  {
                    \exp_not:N \hyperref
                      [ \l_tmpa_tl ]
                      {
                        \l_istqb_reference_label_tl
                        {}~
                        \l_istqb_reference_number_tl
                      }
                  }
              }
            \tl_use:N
              \l_tmpb_tl
          }
      }{
        \textit { \url { #2 } }
      }
}
\cs_generate_variant:Nn
  \str_lowercase:n
  { V }

% Bibliography
\markdownSetup
  {
    citations,
  }

% Index and multi-row cells
\RequirePackage{multirow}
%% Function for indexing terms
\tl_new:N
  \l_istqb_index_current_term_tl
\str_new:N
  \l_istqb_index_current_term_str
\cs_new:Nn
  \istqb_index:n
  {
    % Strip formatting from the term.
    \tl_set:Nn
      \l_istqb_index_current_term_tl
      { #1 }
    \regex_replace_all:nnN
      { \c[CBE]. }
      { }
      \l_istqb_index_current_term_tl
    \str_set:NV
      \l_istqb_index_current_term_str
      \l_istqb_index_current_term_tl
    % Index a lower-cased variant of the term.
    \exp_args:Nx
      \index
      {
        \str_lowercase:V
          \l_istqb_index_current_term_str
      }
  }
%% Renderers for index terms and multi-row cells
\markdownSetup
  {
    bracketedSpans,
    renderers = {
      bracketedSpanAttributeContextBegin = {
        \markdownSetup
          {
            renderers = {
              attributeClassName = ,
              attributeKeyValue = ,
              %% Index
              attributeClassName += {
                \str_if_eq:nnT
                  { ##1 }
                  { index }
                  {
                    \def\next####1\markdownRendererBracketedSpanAttributeContextEnd
                      {
                        \istqb_index:n
                          { ####1 }
                        ####1
                      }
                    \next
                  }
              },
              %% Multi-row cells
              attributeKeyValue += {
                \str_if_eq:nnT
                  { ##1 }
                  { rows }
                  {
                    \def\next####1\markdownRendererBracketedSpanAttributeContextEnd
                      {
                        \multirow
                          { ##2 }
                          { * }
                          { ####1 }
                        \int_step_inline:nnn
                          { \the \markdownLaTeXRowCounter }
                          { \the \markdownLaTeXRowCounter + ##2 - 2 }
                          {
                            \tl_set:Nn
                              \l_tmpa_tl
                              { ########1, }
                            \tl_put_right:Nx
                              \l_tmpa_tl
                              { \the \markdownLaTeXColumnCounter }
                            \prop_gput:NVn
                              \g_istqb_multi_row_prop
                              \l_tmpa_tl
                              { true }
                          }
                      }
                    \next
                  }
              },
            }
          }
      },
      bracketedSpanAttributeContextEnd = ,
    }
  }
